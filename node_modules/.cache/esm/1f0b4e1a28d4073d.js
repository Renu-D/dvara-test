let express,config,compression,bodyParser,log4js,routes;_28d‍.x([["default",()=>_28d‍.o]]);_28d‍.w("express",[["default",["express"],function(v){express=v}]]);_28d‍.w("./config",[["default",["config"],function(v){config=v}]]);_28d‍.w("compression",[["default",["compression"],function(v){compression=v}]]);_28d‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_28d‍.w("./config/log4js",[["default",["log4js"],function(v){log4js=v}]]);_28d‍.w("./routes",[["default",["routes"],function(v){routes=v}]]);




const logger = log4js.getLogger('APP');



const app = express();

// console.log(config);
app.set('port', config.API_PORT);
//compress all responses
app.use(compression());
app.use(bodyParser.json({limit: '20mb'}));
app.use(bodyParser.urlencoded({limit: '20mb', extended: true}));

process.on('uncaughtException', (err) => {
    logger.error(err.message);
    process.exit(1);
});


routes(app);

_28d‍.d(app);